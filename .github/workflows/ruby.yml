# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

services:
  db:
    platform: linux/x86_64
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: myrootpass
      MYSQL_DATABASE: funny_cats_api_development
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  minio:
    image: 'minio/minio'
    container_name: minio
    environment:
        MINIO_ROOT_USER: user
        MINIO_ROOT_PASSWORD: 123456789o
    entrypoint: bash
    command: -c "/opt/bin/minio server /export --address :9000 --console-address :9001"
    volumes:
        - ./docker/minio/data:/export
    ports:
        - '9000:9000'
        - '9001:9001'
  volumes:
    mysql_data:
    minio:
      driver: local

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.1']

    steps:
      - name: Check out code
        id: checkout
        uses: actions/checkout@v2

      - name: Show Docker containers
        run: docker ps -a

      - name: Setup docker
        shell: bash
        run: |
          # イメージのビルド
          docker-compose up -d

          # データベースの作成
          bundle rake db:create RAILS_ENV=test
          bundle rake db:migrate RAILS_ENV=test
        env:
          RAILS_ENV: test

      - name: run rubocop
        run: |
          bundle exec rubocop

      - name: Run tests
        shell: bash
        run: |
          gem install bundler
          bundle install --path vendor/bundle --quiet --jobs 4 --retry 3
          bundle exec rspec
        env:
          RAILS_ENV: test